name: Android CI (Shelter Fork - ARM32 Target)

on:
  push:
    branches:
      - main # Adjust this to your default branch if it's not 'main' (e.g., master, develop)
  pull_request:
    branches:
      - main # Adjust this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest # GitHub-hosted runners are x86_64, but they can build APKs for ARM32

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Recommended distribution
          java-version: '17' # Common Java version for modern Android projects. Adjust if your project requires a different one.

      - name: Set up Android SDK and Accept Licenses
        uses: android-actions/setup-sdk@v1 # This action handles SDK installation and license acceptance
        with:
          # You can specify components here if you need very specific versions,
          # but usually, it installs common ones and accepts licenses.
          # Example: sdk-channel: '0' # Stable channel
          # Example: build-tools: '34.0.0'
          # Example: platform-tools: 'latest'
          # Example: platforms: 'android-34'
          # For license acceptance, this action internally uses 'yes | sdkmanager --licenses' or similar.
          # Explicitly calling sdkmanager --licenses again below is a fallback/double-check.
          api-level: 34 # Target API level for building

      # Optional: Double-check license acceptance as a separate step.
      # This is a fallback in case setup-sdk doesn't catch everything, but it should be redundant.
      - name: Re-confirm Android SDK Licenses (Fallback)
        # This uses the direct sdkmanager command in case setup-sdk misses any.
        # It's good practice to have it, but setup-sdk should ideally handle it.
        run: |
          # The SDK path should be set by android-actions/setup-sdk, but we use a common fallback path.
          # Find sdkmanager in common paths or rely on PATH set by setup-sdk
          if command -v sdkmanager &> /dev/null
          then
              yes | sdkmanager --licenses || true
          else
              echo "sdkmanager not found in PATH. Assuming setup-sdk handled it."
              # Try a common absolute path if sdkmanager is not in PATH
              if [ -d "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" ]; then
                yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
              else
                echo "Warning: Cannot find sdkmanager to perform license re-confirmation."
              fi
          fi


      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (Debug APK)
        # This command will build the debug version of your APK.
        # For ARM32 (A10s), your app's build.gradle should have 'armeabi-v7a' in abiFilters
        # if it uses native libraries. This YAML sets up the environment to allow such a build.
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks # You can name the artifact anything, e.g., 'shelter-debug-apks'
          path: app/build/outputs/apk/debug/*.apk # This path assumes your main module is 'app'. Adjust if different.
                                                  # The *.apk wildcard ensures all generated APKs (including for ARM32) are uploaded.
